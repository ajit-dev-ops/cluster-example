apiVersion: apps/v1
kind: Deployment
metadata:
  name: router
  namespace: druid
  labels:
    app: router
spec:
  replicas: 1
  selector:
    matchLabels:
      app: router
  template:
    metadata:
      labels:
        app: router
    spec:
      terminationGracePeriodSeconds: 1800
      containers:
      - name: router
        image: markthub/druid:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8888
          name: router
        resources:
          limits:
            cpu: "128m"
            memory: 512Mi
          requests:
            cpu: "128m"
            memory: 256Mi
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        env:
          - name: POSTGRES_URL
            value: "postgres-cs.druid.svc.cluster.local"
          - name: ZOOKEEPER_SERVER
            value: "zk-cs.druid.svc.cluster.local"
          - name: DRUID_SERVICE_PORT
            value: "8888"
          - name: DRUID_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: DRUID_SERVICE
            value: "router"
          - name: DRUID_JVM_ARGS
            value: "-server -Xms256m -Xmx256m -Daws.region=eu-west-1 -Duser.timezone=UTC -Dfile.encoding=UTF-8 -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager"
          - name: AWS_REGION
            value: eu-west-1
          - name: AWS_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: druid-secret
                key: aws_access_key
          - name: AWS_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: druid-secret
                key: aws_secret_key
          - name: BUCKET_STORAGE
            valueFrom:
              secretKeyRef:
                name: druid-secret
                key: aws_bucket_storage
          - name: BUCKET_INDEX
            valueFrom:
              secretKeyRef:
                name: druid-secret
                key: aws_bucket_index
        livenessProbe:
          initialDelaySeconds: 60
          httpGet:
            path: /status/health
            port: 8888
        readinessProbe:
          initialDelaySeconds: 60
          httpGet:
            path: /status/health
            port: 8888     
        volumeMounts:
        - mountPath: /var/druid/
          name: data
      volumes:
      - name: druid-secret
        secret:
          secretName: druid-secret
      - name: data
        emptyDir: {}